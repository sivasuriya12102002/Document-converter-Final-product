apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: get-converted-exams
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/wasm;
        gzip_comp_level 6;
        gzip_proxied any;

        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;
            
            # Security headers
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; worker-src 'self' blob:;" always;

            # Security headers for WASM and SharedArrayBuffer
            add_header Cross-Origin-Embedder-Policy require-corp;
            add_header Cross-Origin-Opener-Policy same-origin;

            # Handle WASM files
            location ~* \.wasm$ {
                add_header Content-Type application/wasm;
                add_header Cross-Origin-Embedder-Policy require-corp;
                add_header Cross-Origin-Opener-Policy same-origin;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # Handle SPA routing
            location / {
                try_files $uri $uri/ /index.html;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }

            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|wasm)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Metrics endpoint for Prometheus
            location /metrics {
                access_log off;
                return 200 "# HELP nginx_up Nginx status\n# TYPE nginx_up gauge\nnginx_up 1\n";
                add_header Content-Type text/plain;
            }
            
            # API endpoints (if any)
            location /api/ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
            
            # Deny access to sensitive files
            location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
            }
            
            location ~ ~$ {
                deny all;
                access_log off;
                log_not_found off;
            }
        }
    }